name:  Deploy to EKS

on:
  push:
    branches: [ main ]

env:
  BACKEND_IMAGE: e-commerce-app-backend
  FRONTEND_IMAGE: e-commerce-app-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}          

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/$BACKEND_IMAGE:$GITHUB_SHA ./microservices/backend
        docker push ${{ secrets.ECR_REGISTRY }}/$BACKEND_IMAGE:$GITHUB_SHA

    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/$FRONTEND_IMAGE:$GITHUB_SHA ./microservices/frontend
        docker push ${{ secrets.ECR_REGISTRY }}/$FRONTEND_IMAGE:$GITHUB_SHA

    - name: Set up Kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Deploy to EKS with Helm
      run: |
        # Update Helm chart with new image tags
        sed -i "s|tag: \"latest\"|tag: \"$GITHUB_SHA\"|g" charts/ecommerce/values.yaml
        sed -i "s|repository: \".*e-commerce-app-backend.*\"|repository: \"${{ secrets.ECR_REGISTRY }}/$BACKEND_IMAGE\"|g" charts/ecommerce/values.yaml
        sed -i "s|repository: \".*e-commerce-app-frontend.*\"|repository: \"${{ secrets.ECR_REGISTRY }}/$FRONTEND_IMAGE\"|g" charts/ecommerce/values.yaml
        
        # Deploy with Helm
        helm upgrade --install ecommerce ./charts/ecommerce -n default --wait

    - name: Verify Deployment
      run: |
        kubectl get pods -n default
        kubectl get ingress -n default
        echo "ðŸš€ Deployment successful!"